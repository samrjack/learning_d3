<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Page Template</title>
        <script type="text/javascript" src="d3.js"></script>
        <link rel="stylesheet" href="style.css">
    </head>
    <body>
        <script type="text/javascript" scr="script.js"></script>
        <script type="text/javascript">

            var svgH = 500;
            var svgW = 900;
            var padding = {top: 20, right: 20, bottom: 20, left: 20};

            var svg = d3.select("body")
                        .append("svg")
                        .attr("height", svgH + padding.top + padding.bottom)
                        .attr("width", svgW + padding.left + padding.right)
                        .append("g")
                        .attr("transform", "translate(" + padding.left + "," + padding.top + ")");

            var projection = d3.geoAlbersUsa()
                               .translate([svgW/2, svgH/2])
                               .scale(d3.min([svgH / 500, svgW / 1000]) * 1000);

            var path = d3.geoPath()
                         .projection(projection);

            var color = d3.scaleQuantize()
                          .range(["rgb(237,248,233)","rgb(186,228,179)","rgb(116,196,118)"
                                 ,"rgb(49,163,84)","rgb(0,109,44)"]);

            var formatAsThousands = d3.format(",");

            d3.json("us-states.json").then(function(json) {
                // svg.selectAll("path")
                //    .data(json.features)
                //    .enter()
                //    .append("path")
                //    .attr("d", path)
                //    .style("fill", "steelblue");

                d3.csv("us-ag-productivity.csv").then(function(data) {
                    color.domain([d3.min(data, d => d.value), d3.max(data, d => d.value)]);

                    for (var i = 0; i < data.length; i++) {
                        var dataState = data[i].state;
                        var dataValue = parseFloat(data[i].value);

                        for (var j = 0; j < json.features.length; j++) {
                            var jsonState = json.features[j].properties.name;
                            if (jsonState == dataState) {
                                json.features[j].properties.value = dataValue;
                                break;
                            }
                        }
                    }


                    svg.selectAll("path")
                       .data(json.features)
                       .enter()
                       .append("path")
                       .attr("d", path)
                       .style("fill", d => {
                           var val = d.properties.value;
                           if (val)
                               return color(val);
                           return  "#ccc";
                       });

                    d3.csv("us-cities.csv").then(function(cities) {

                        svg.selectAll("circle")
                           .data(cities)
                           .enter()
                           .append("circle")
                           .attr("cx", d => projection([d.lon, d.lat])[0])
                           .attr("cy", d => projection([d.lon, d.lat])[1])
                           .attr("r", d => Math.sqrt(parseInt(d.population) * 0.00004))
                           .style("fill", "yellow")
                           .style("stroke", "gray")
                           .style("stroke-width", 0.25)
                           .style("opacity", 0.75)
                           .append("title")
                           .text(d => d.place + ": Pop. " + formatAsThousands(d.population));

                        createPanButtons();
                    });
                });

                var createPanButtons = function() {
                    // create clickable groups
                    var north = svg.append("g")
                                   .attr("class", "pan")
                                   .attr("id", "north");
                    north.append("rect")
                         .attr("x", 0)
                         .attr("y", 0)
                         .attr("width", svgW)
                         .attr("height", 30);
                    north.append("text")
                         .attr("x", svgW/2)
                         .attr("y", 20)
                         .html("&uarr;");

                    var south = svg.append("g")
                                   .attr("class", "pan")
                                   .attr("id", "south");
                    south.append("rect")
                         .attr("x", 0)
                         .attr("y", svgH - 30)
                         .attr("width", svgW)
                         .attr("height", 30);
                    south.append("text")
                         .attr("x", svgW/2)
                         .attr("y", svgH - 10)
                         .html("&darr;");

                    var west = svg.append("g")
                                   .attr("class", "pan")
                                   .attr("id", "west");
                    west.append("rect")
                         .attr("x", 0)
                         .attr("y", 30)
                         .attr("width", 30)
                         .attr("height", svgH - 60);
                    west.append("text")
                         .attr("x", 15)
                         .attr("y", svgH/2)
                         .html("&larr;");

                    var east = svg.append("g")
                                   .attr("class", pan)
                                   .attr("id", "east");
                    east.append("rect")
                         .attr("x", svgW - 30)
                         .attr("y", 30)
                         .attr("width", 30)
                         .attr("height", svgH - 60);
                    east.append("text")
                         .attr("x", svgW - 15)
                         .attr("y", svgH/2)
                         .html("&rarr;");

                    d3.selectAll(".pan")
                      .on("click", function() {
                          // current offset
                          var offset = projection.translate();

                          var moveAmount = 50;

                          var direction = d3.select(this).attr("id");

                          switch(direction) {
                              case "north":
                                  offset[1] += moveAmount;
                                  break;
                              case "south":
                                  offset[1] -= moveAmount;
                                  break;
                              case "east":
                                  offset[0] += moveAmount;
                                  break;
                              case "east":
                                  offset[0] -= moveAmount;
                                  break;
                              default:
                                  break;
                          }

                          // update projection
                          projection.translate(offset);

                          // update all shapes
                          svg.selectAll("path")
                             .attr("d", path);
                          svg.selectAll("circle")
                             .attr("cx", d => projection([d.lon, d.lat])[0])
                             .attr("cy", d => projection([d.lon, d.lat][1]));
                      })
                }
            })
        </script>
    </body>
</html>
